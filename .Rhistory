t.test(smp, mu=1220)
smp2 = c(1396, 1340, 1232, 1184, 1295, 1247, 1201, 1182,
1392, 1287, 1359, 1360, 1243, 1264, 1276)
t.test(smp2, mu=1220)
qt(1-alpha, df=14)
##### 다양한 분포로부터 추출한 표본 평균의 분포 확인(CLT)
windowsFonts(malgun='맑은 고딕')
##### 다양한 분포로부터 추출한 표본 평균의 분포 확인(CLT)
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))   # 0.06959 0.87239
c(mean(t4.mean), sd(t4.mean))
c(mean(t2.mean), sd(t2.mean))
c(mean(t16.mean), sd(t16.mean))
c(mean(t32.mean), sd(t32.mean))
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))   # -0.00696  0.89841
c(mean(t4.mean), sd(t4.mean))
c(mean(t16.mean), sd(t16.mean))
c(mean(t32.mean), sd(t32.mean))
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))   # -0.00696  0.89841
c(mean(t4.mean), sd(t4.mean))
c(mean(t16.mean), sd(t16.mean))
c(mean(t32.mean), sd(t32.mean))
# t-분포(자유도=5)의 평균과 표준편차
m = 0
s = sqrt(5 / (df-2)
c(m, s)
# t-분포(자유도=5)의 평균과 표준편차
m = 0
s = sqrt(5 / (df-2)
# t-분포(자유도=5)의 평균과 표준편차
m = 0
s = sqrt(5 / (df-2)
# t-분포(자유도=5)의 평균과 표준편차
m = 0
s = sqrt(5 / (df-2)
c(m, s)
windowsFonts(malgun='맑은 고딕')
options(digits=4)
n = 1000
df = 5; df2 = 10
### t-분포(자유도=5)
t2.mean = rep(NA, n)
t4.mean = rep(NA, n)
t16.mean = rep(NA, n)
t32.mean = rep(NA, n)
for (i in 1:n) {
t2.mean[i] = mean(rt(2, df=df))
t4.mean[i] = mean(rt(4, df=df))
t16.mean[i] = mean(rt(16, df=df))
t32.mean[i] = mean(rt(32, df=df))
}
c(mean(t2.mean), sd(t2.mean))   # 0.01787 0.92888
c(mean(t4.mean), sd(t4.mean))   # -0.02093  0.62849
c(mean(t16.mean), sd(t16.mean)) # 0.01164 0.31563
c(mean(t32.mean), sd(t32.mean)) # 0.007629 0.228837
# t-분포(자유도=5)의 평균과 표준편차
m = 0
s = sqrt(5 / (df-2)
c(m, s)
s = sqrt(5 / (df-2))
# t-분포(자유도=5)의 평균과 표준편차
m = 0
s = sqrt(5 / (df-2))
c(m, s)
par(mforw=c(2,2), oma=c(0,0,2,0))
par(mfrow=c(2,2), oma=c(0,0,2,0))
hist(t2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
x1 = seq(min(t2.mean), max(t2.mean), length=1000)
par(mfrow=c(2,2), oma=c(0,0,2,0))
hist(t2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
m = 0
s = sqrt(5 / (df-2))
c(m, s)
par(mfrow=c(2,2), oma=c(0,0,2,0))
hist(t2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
hist(t2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
lines(x2, y2, lty=4, lwd=4, col='blue')
hist(t4.mean, prob=T, main='표본크기: 4', ylab='', xlab='',
col='orange', border='red')
par(mfrow=c(2,2), oma=c(0,0,2,0))
hist(t2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
lines(x3, y3, lty=2, lwd=2, col='blue')
m = 0
s = sqrt(5 / (df-2))
c(m, s)
par(mfrow=c(2,2), oma=c(0,0,2,0))
hist(t2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
par(mfrow=c(2,2), oma=c(0,0,2,0))
hist(t2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
x1 = seq(min(t2.mean), max(t2.mean), length=1000)
y1 = dnorm(x1, m, s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(t4.mean, prob=T, main='표본크기: 4', ylab='', xlab='',
col='orange', border='red')
x2 = seq(min(t4.mean), max(t4.mean), length=1000)
y2 = dnorm(x2, m, s/sqrt(4))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(t16.mean, prob=T, main='표본크기: 16', ylab='', xlab='',
col='orange', border='red')
x3 = seq(min(t16.mean), max(t16.mean), length=1000)
y3 = dnorm(x3, m, s/sqrt(16))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(t32.mean, prob=T, main='표본크기: 32', ylab='', xlab='',
col='orange', border='red')
x4 = seq(min(t32.mean), max(t32.mean), length=1000)
y4 = dnorm(x4, m, s/sqrt(32))
lines(x4, y4, lty=2, lwd=2, col='blue')
### 카이제곱 분포(자유도=5)
chi2.mean = rep(NA, n)
chi4.mean = rep(NA, n)
chi16.mean = rep(NA, n)
chi32.mean = rep(NA, n)
for (i in 1:n) {
chi2.mean = mean(rchisq(2, df=df))
chi4.mean = mean(rchisq(4, df=df))
chi16.mean = mean(rchisq(16, df=df))
chi32.mean = mean(rchisq(32, df=df))
}
# 카이제곱 분포(자유도=5)의 평균과 표준편차
m = df
s = sqrt(2 * df)
par(mfrow=c(2,2), oma=c(0,0,2,0), family='malgun')
hist(chi2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
y1 = dnorm(x1, m, s/sqrt(2))
chi32.mean[i] = mean(rchisq(32, df=df))
# 카이제곱 분포(자유도=5)의 평균과 표준편차
m = df
s = sqrt(2 * df)
par(mfrow=c(2,2), oma=c(0,0,2,0), family='malgun')
hist(chi2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
x1 = seq(min(chi2.mean), max(chi2.mean), length=1000)
y1 = dnorm(x1, m, s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
chi2.mean = rep(NA, n)
chi4.mean = rep(NA, n)
chi16.mean = rep(NA, n)
chi32.mean = rep(NA, n)
for (i in 1:n) {
chi2.mean[i] = mean(rchisq(2, df=df))
chi4.mean[i] = mean(rchisq(4, df=df))
chi16.mean[i] = mean(rchisq(16, df=df))
chi32.mean[i] = mean(rchisq(32, df=df))
}
# 카이제곱 분포(자유도=5)의 평균과 표준편차
m = df
s = sqrt(2 * df)
par(mfrow=c(2,2), oma=c(0,0,2,0), family='malgun')
hist(chi2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
x1 = seq(min(chi2.mean), max(chi2.mean), length=1000)
y1 = dnorm(x1, m, s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(chi4.mean, prob=T, main='표본크기: 4', ylab='', xlab='',
col='orange', border='red')
x2 = seq(min(chi4.mean), max(chi4.mean), length=1000)
y2 = dnorm(x2, m, s/sqrt(4))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(chi16.mean, prob=T, main='표본크기: 16', ylab='', xlab='',
col='orange', border='red')
x3 = seq(min(chi16.mean), max(chi16.mean), length=1000)
y3 = dnorm(x3, m, s/sqrt(16))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(chi32.mean, prob=T, main='표본크기: 32', ylab='', xlab='',
col='orange', border='red')
x4 = seq(min(chi32.mean), max(chi32.mean), length=1000)
y4 = dnorm(x4, m, s/sqrt(32))
lines(x4, y4, lty=2, lwd=2, col='blue')
mtext('카이제곱 표본평균의 분포(자유도=5)', outer=T, cex=1.2)
mtext('t 표본평균의 분포(자유도=5)', outer=T, cex=1.2)
### F-분포(자유도1=5, 자유도2=10)
f2.mean = rep(NA, n)
f4.mean = rep(NA, n)
f16.mean = rep(NA, n)
f32.mean = rep(NA, n)
for (i in 1:n) {
f2.mean[i] = mean(rf(2, df1=df, df2=df2))
f4.mean[i] = mean(rf(4, df1=df, df2=df2))
f16.mean[i] = mean(rf(16, df1=df, df2=df2))
f32.mean[i] = mean(rf(32, df1=df, df2=df2))
}
# F 분포(자유도1=5, 자유도2=10)의 평균과 표준편차
m = df2 / (df2 - 2)
m = df2 / (df2 - 2)
s = sqrt((2*df2^2*(df+df2-2)) / (df*(df2-2)^2*(df2-4)))
par(mfrow=c(2,2), oma=c(0,0,2,0), family='malgun')
hist(f2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
x1 = seq(min(f2.mean), max(f2.mean), length=1000)
y1 = dnorm(x1, m, s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(f4.mean, prob=T, main='표본크기: 4', ylab='', xlab='',
col='orange', border='red')
x2 = seq(min(f4.mean), max(f4.mean), length=1000)
y2 = dnorm(x2, m, s/sqrt(4))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(f16.mean, prob=T, main='표본크기: 16', ylab='', xlab='',
col='orange', border='red')
x3 = seq(min(f16.mean), max(f16.mean), length=1000)
y3 = dnorm(x3, m, s/sqrt(16))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(f32.mean, prob=T, main='표본크기: 32', ylab='', xlab='',
col='orange', border='red')
x4 = seq(min(f32.mean), max(f32.mean), length=1000)
y4 = dnorm(x4, m, s/sqrt(32))
lines(x4, y4, lty=2, lwd=2, col='blue')
par(mfrow=c(1,1))
f2.mean = rep(NA, n)
f4.mean = rep(NA, n)
f16.mean = rep(NA, n)
f32.mean = rep(NA, n)
for (i in 1:n) {
f2.mean[i] = mean(rf(2, df1=df, df2=df2))
f4.mean[i] = mean(rf(4, df1=df, df2=df2))
f16.mean[i] = mean(rf(16, df1=df, df2=df2))
f32.mean[i] = mean(rf(32, df1=df, df2=df2))
}
# F 분포(자유도1=5, 자유도2=10)의 평균과 표준편차
m = df2 / (df2 - 2)
s = sqrt((2*df2^2*(df+df2-2)) / (df*(df2-2)^2*(df2-4)))
par(mfrow=c(2,2), oma=c(0,0,2,0), family='malgun')
hist(f2.mean, prob=T, main='표본크기: 2', ylab='', xlab='',
col='orange', border='red')
x1 = seq(min(f2.mean), max(f2.mean), length=1000)
y1 = dnorm(x1, m, s/sqrt(2))
lines(x1, y1, lty=2, lwd=2, col='blue')
hist(f4.mean, prob=T, main='표본크기: 4', ylab='', xlab='',
col='orange', border='red')
x2 = seq(min(f4.mean), max(f4.mean), length=1000)
y2 = dnorm(x2, m, s/sqrt(4))
lines(x2, y2, lty=2, lwd=2, col='blue')
hist(f16.mean, prob=T, main='표본크기: 16', ylab='', xlab='',
col='orange', border='red')
x3 = seq(min(f16.mean), max(f16.mean), length=1000)
y3 = dnorm(x3, m, s/sqrt(16))
lines(x3, y3, lty=2, lwd=2, col='blue')
hist(f32.mean, prob=T, main='표본크기: 32', ylab='', xlab='',
col='orange', border='red')
x4 = seq(min(f32.mean), max(f32.mean), length=1000)
y4 = dnorm(x4, m, s/sqrt(32))
lines(x4, y4, lty=2, lwd=2, col='blue')
mtext('F 표본평균의 분포(자유도=5)', outer=T, cex=1.2)
par(mfrow=c(1,1))
### 단일 모집단의 평균 검정(1-sample T test)
df = read.table('data/babyboom.dat.txt', header=F)
names(df) = c('time','gender','weight','minutes')
head(df)
girl_baby = subset(df, gender==1)    # df[df$gender==1,]
weight = girl_baby[[3]]
weigh
weight
barx = mean(weight)
s = sd(weight)
n = length(weight)
mu0 = 2800
t = (barx - mu0) / (s / sqrt(n))
t
# 임계값과 유의확률
alpha = 0.05
uppper.limit = qt(1 - alpha, df=n-1)
upper.limit = qt(1 - alpha, df=n-1)
upper.limit
# 판정
if (t > upper.limit) {
print('귀무가설 기각')
print('여자 신생아의 체중이 2800보다 크다.')
} else {
print('귀무가설 채택')
print('여자 신생아의 체중이 2800보다 크지 않다.')
}
p.value = 1 - pt(t, df=n-1)
p.value
# 판정
if (p.value < alpha) {
print('귀무가설 기각')
print('여자 신생아의 체중이 2800보다 크다.')
} else {
print('귀무가설 채택')
print('여자 신생아의 체중이 2800보다 크지 않다.')
}
# R
t.test(weight, mu=2800, alternative='greater')
####################################################################
# 정규성 검정 - 표본이 정규성을 가져야 1-sample T test를 할 수 있음.
####################################################################
shapiro.test(weights)
####################################################################
# 정규성 검정 - 표본이 정규성을 가져야 1-sample T test를 할 수 있음.
####################################################################
shapiro.test(weight)
qqnorm(weight)
qqline(weight)
shapiro.test(x)
x = c(25, 16, 44, 82, 36, 58, 18)
shapiro.test(x)
qqnorm(x)
qqline(x)
qqline(x, col='red')
x = c(25, 16, 44, 82, 36, 58, 63, 18)
shapiro.test(x)     # p-value: 0.5
qqnorm(x)
qqline(x, col='red')
### 단일 모비율의 검정
bb = read.table('data/restitution.txt', header=F)
head(bb)
### 단일 모비율의 검정
bb = read.table('data/restitution.txt')
head(bb)
### 단일 모비율의 검정
bb = read.table('data/restitution.txt', header=T
### 단일 모비율의 검정
bb = read.table('data/restitution.txt', header=T)
head(bb)
bb = read.table('data/restitution.txt', header=T)
head(bb)
rel = ifelse(bb$rst < 0.4134 | bb$rst > 0.4374, 1, 0)
# 검정 통계량 계산
n = length(rel)
nos = sum(rel)
nos
z = (phat - p0) / sqrt(p0 * (1-p0) / n)
phat = nos / n
p0 = 0.1
z = (phat - p0) / sqrt(p0 * (1-p0) / n)
# 임계값과 유의확률
alpha = 0.05
uppper.limit = qnorm(1 - alpha)
p.value = 1 - pnorm(z)
c(uppper.limit, p.value)
# R: prop.test
prop.test(nos, n, p=0.1, alternative='greater', correct=F)
par(mar=c(0,1,1,1))
x <- seq(-3, 3, by=0.001)
y <- dnorm(x)
plot(x, y, type="l", axes=F, ylim=c(-0.02, 0.4),
main="", xlab="z", ylab="")
abline(h=0)
polygon(c(upper.limit, x[x>upper.limit], 3), c(0, y[x>upper.limit], 0), col=2)
text(upper.limit, -0.02, expression(z[0.05]==1.645))
polygon(c(z, x[x>z], 3), c(0, y[x>z], 0), density=20, angle=45)
text(z, -0.02, paste("z=", round(z, 3)))
text(1.2, 0.3, paste("P(Z>z)=", round(p.value, 3)), cex=0.8)
### 독립 표본: 2 sample T test
data = read.table('data/chapter7.txt', header=T)
head(data)
data = read.table('data/chapter7.txt', header=T)
head(data)
##### 모집단이 2개인 경우의 평균 비교 검정
### 독립 표본: 2 sample T test
data = read.table('data/chapter7.txt', header=T)
head(data)
girl = subset(data, gender==1)
boy = subset(data, gender==2)
# 등분산성 테스트
var.test(data$weight ~ data$gender)
# 2-sample T test
t.test(data$weight ~ data$gender, mu=0, alternative='less', var.equal=T)
c(mean(girl$weight), mean(boy$weight))
# 정규성 테스트
shapiro.test(girl$weight)
shapiro.test(boy$weight)   # p-value = 0.02
qqnorm(boy$weight)
qqline(boy$weight)
### 대응 표본: paired T test
# 식욕부진 치료요법의 효과 검증
data = read.csv('data/anorexia.csv')
head(data)
t.test(data$Prior, data$Post, paired=T, alternative='less')
